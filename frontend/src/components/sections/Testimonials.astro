---
interface T {
  quote: string;
  author: string;
  role?: string;
  city?: string;
}
const { items = [] } = Astro.props as { items: T[] };
---

<section class="py-20">
  <div class="max-w-7xl mx-auto px-6">
    <h2 class="text-2xl md:text-3xl font-bold">What clients say</h2>
    <div
      class="mt-8 overflow-x-auto snap-x snap-mandatory [scrollbar-width:none] [-ms-overflow-style:none]"
      style="scrollbar-width:none;"
    >
      <div class="flex gap-6 min-w-max">
        {
          items.map((t) => (
            <figure
              class="snap-start w-[340px] md:w-[420px] rounded-2xl border border-white/10 bg-white/[0.03] p-6"
              data-aos="fade-up"
            >
              <svg
                viewBox="0 0 24 24"
                class="h-6 w-6 text-white/30"
                fill="currentColor"
              >
                <path d="M7.17 6A5 5 0 0 0 2 11v7h7v-7H6.5A2.5 2.5 0 0 1 9 8.5V6H7.17Zm12 0A5 5 0 0 0 14 11v7h7v-7h-2.5A2.5 2.5 0 0 1 21 8.5V6h-1.83Z" />
              </svg>
              <blockquote class="mt-3 text-white/80">{t.quote}</blockquote>
              <figcaption class="mt-4 text-sm text-white/60">
                — {t.author}
                {t.role ? `, ${t.role}` : ""}
                {t.city ? ` · ${t.city}` : ""}
              </figcaption>
            </figure>
          ))
        }
      </div>
    </div>
  </div>
</section>
