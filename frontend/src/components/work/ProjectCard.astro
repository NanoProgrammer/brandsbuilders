---
interface KPI { label: string; value: string }
interface Props { href: string; title: string; cover: string; tags?: string[]; kpis?: KPI[] }
const { href, title, cover, tags = [], kpis = [] } = Astro.props as Props;
---
<a href={href} class="block rounded-2xl border border-white/10 bg-white/[0.03] hover:bg-white/[0.06] overflow-hidden">
  <img src={cover} alt="" class="w-full aspect-[16/10] object-cover border-b border-white/10" loading="lazy" decoding="async" />
  <div class="p-4">
    <h3 class="font-semibold">{title}</h3>
    {tags.length > 0 && (
      <div class="mt-2 flex flex-wrap gap-2 text-xs text-white/70">
        {tags.map((t) => <span class="rounded-full border border-white/15 bg-white/[0.05] px-2 py-0.5">{t}</span>)}
      </div>
    )}
    {kpis.length > 0 && (
      <dl class="mt-3 grid grid-cols-2 gap-3 text-sm">
        {kpis.map((k) => (
          <div><dt class="text-white/50">{k.label}</dt><dd class="font-semibold">{k.value}</dd></div>
        ))}
      </dl>
    )}
  </div>
</a>
